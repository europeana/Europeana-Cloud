<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.europeana.cloud</groupId>
        <artifactId>ecloud-service-mcs</artifactId>
        <version>12-SNAPSHOT</version>
    </parent>

    <artifactId>ecloud-service-mcs-rest</artifactId>
    <name>Europeana Cloud: Metadata and Content Service REST</name>

    <build>
    <plugins>
      <plugin>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <groupId>org.springframework.boot</groupId>
        <version>${version.spring-boot}</version>
      </plugin>
      <plugin>
        <artifactId>git-commit-id-maven-plugin</artifactId>
        <configuration>
          <dotGitDirectory>${project.parent.parent.basedir}/.git</dotGitDirectory>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
          <prefix>git</prefix>
          <verbose>false</verbose>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>revision</goal>
            </goals>
            <id>get-the-git-infos</id>
            <phase>initialize</phase>
          </execution>
          <execution>
            <goals>
              <goal>validateRevision</goal>
            </goals>
            <id>validate-the-git-infos</id>
            <phase>package</phase>
          </execution>
        </executions>
        <groupId>io.github.git-commit-id</groupId>
        <version>${version.git-commit-maven}</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>mcs.properties</exclude>
          </excludes>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.1.0</version>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>persistent/</exclude>
          <exclude>persistent-authentication/</exclude>
          <exclude>persistent-authorization/</exclude>
        </excludes>
      </resource>
    </resources>
    </build>

  <dependencies>
        <dependency>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                  <artifactId>spring-boot-starter-logging</artifactId>
                  <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
          <groupId>org.springframework.boot</groupId>
        </dependency>
    <dependency>
      <artifactId>spring-boot-starter-log4j2</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-security</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>springdoc-openapi-ui</artifactId>
      <groupId>org.springdoc</groupId>
      <version>${version.openapi}</version>
    </dependency>
    <dependency>
      <artifactId>springdoc-openapi-javadoc</artifactId>
      <groupId>org.springdoc</groupId>
      <version>${version.openapi}</version>
    </dependency>

    <dependency>
      <artifactId>therapi-runtime-javadoc-scribe</artifactId>
      <groupId>com.github.therapi</groupId>
      <version>0.15.0</version>
    </dependency>

    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>ecloud-service-uis-rest-client-java</artifactId>
        <groupId>eu.europeana.cloud</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>ecloud-service-mcs-persistent</artifactId>
        <exclusions> <!--Remove exclusions if all spring libraries in all project modules will be new-->
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>org.springframework</groupId>
          </exclusion>
        </exclusions>
        <groupId>eu.europeana.cloud</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>ecloud-common</artifactId>
        <groupId>eu.europeana.cloud</groupId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <artifactId>ecloud-service-commons</artifactId>
        <groupId>eu.europeana.cloud</groupId>
        <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>

        <!-- API, java.xml.bind module -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>2.3.3</version>
        </dependency>

        <!-- Runtime, com.sun.xml.bind module -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>${version.jaxb-runtime}</version>
        </dependency>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-mcs-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Authentication + Authorization -->
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-aas-authorization</artifactId>
            <version>${project.version}</version>
            <exclusions> <!--Remove exclusions if all spring libraries in all project modules will be new-->
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>org.springframework.security</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-aas-authentication</artifactId>
            <version>${project.version}</version>
            <exclusions> <!--Remove exclusions if all spring libraries in all project modules will be new-->
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>org.springframework.security</groupId>
                </exclusion>
            </exclusions>
        </dependency>


        <!--For uploading files-->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.5</version>
        </dependency>

        <!--For producing XML output by requests-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${version.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${version.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${version.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${version.jackson}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${version.tika}</version>
        </dependency>
        <!--logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${version.log4j}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${version.slf4j}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lombok}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.14</version>
        </dependency>

        <!-- tests -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
            <version>4.5.13</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kubek2k</groupId>
            <artifactId>springockito</artifactId>
            <version>1.0.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <version>${version.jersey}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-core</artifactId>
            <version>${version.jersey}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${version.junitparams}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <artifactId>guava</artifactId>
            <groupId>com.google.guava</groupId>
        </dependency>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-aas-permission</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-web-commons</artifactId>
          <scope>compile</scope>
          <version>${project.version}</version>
        </dependency>
      <dependency>
        <artifactId>metrics-core</artifactId>
        <groupId>com.codahale.metrics</groupId>
        <version>3.0.2</version>
      </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <artifactId>spring-boot-dependencies</artifactId>
                <groupId>org.springframework.boot</groupId>
                <scope>import</scope>
                <type>pom</type>
                <version>${version.spring-boot}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <properties>
        <main.directory>${project.parent.basedir}</main.directory>
        <spring.config.dir>persistent</spring.config.dir>
    </properties>
</project>
